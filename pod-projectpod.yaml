apiVersion: v1
kind: Pod
metadata:
  creationTimestamp: "2022-09-28T16:47:01Z"
  labels:
    run: projectpod
  name: projectpod
  namespace: default
  resourceVersion: "222550"
  uid: 8d9936ca-25d2-42ea-867f-88c84e8d56fa
spec:
  containers:
  - image: nginx
    imagePullPolicy: Always
    name: webserver
    resources: {}
    ports:
      - containerPort: 80
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: localmount
      readOnly: true
  - image: debian
    imagePullPolicy: Always
    name: debiandist
    resources: {}
    terminationMessagePath: /dev/termination-log
    terminationMessagePolicy: File
    volumeMounts:
    - mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      name: kube-api-access-xpkhs
      readOnly: true
  dnsPolicy: ClusterFirst
  enableServiceLinks: true
  nodeName: docker-desktop
  preemptionPolicy: PreemptLowerPriority
  priority: 0
  restartPolicy: Always
  schedulerName: default-scheduler
  securityContext: {}
  serviceAccount: default
  serviceAccountName: default
  terminationGracePeriodSeconds: 30
  tolerations:
  - effect: NoExecute
    key: node.kubernetes.io/not-ready
    operator: Exists
    tolerationSeconds: 300
  - effect: NoExecute
    key: node.kubernetes.io/unreachable
    operator: Exists
    tolerationSeconds: 300
  volumes:
  - name: localmount
    hostPath:
      path: /mnt/project
      type: Directory
  - name: kube-api-access-xpkhs
    projected:
      defaultMode: 420
      sources:
      - serviceAccountToken:
          expirationSeconds: 3607
          path: token
      - configMap:
          items:
          - key: ca.crt
            path: ca.crt
          name: kube-root-ca.crt
      - downwardAPI:
          items:
          - fieldRef:
              apiVersion: v1
              fieldPath: metadata.namespace
            path: namespace